---
apiVersion: v1
kind: Namespace
metadata:
  name: docker-registry
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
      - name: docker-registry
        image: registry:2.7.1
        ports:
        - name: http
          containerPort: 5000
        volumeMounts:
        - name: image-store
          mountPath: /var/lib/registry
      volumes:
      - name: image-store
        hostPath:
          path: /mnt/registry-data/data
          type: DirectoryOrCreate
---
kind: Service
apiVersion: v1
metadata:
  name: docker-registry
  namespace: docker-registry
  labels:
    app: docker-registry
spec:
  selector:
    app: docker-registry
  ports:
  - name: http
    port: 5000
    targetPort: 5000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    cert-manager.io/issue-temporary-certificate: "true"
    acme.cert-manager.io/http01-edit-in-place: "true"
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/auth-url: https://10.43.17.245
  name: docker-registry
  namespace: docker-registry
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - registry.example.com
    secretName: registry.example.com
  rules:
  - host: registry.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: docker-registry
            port:
              number: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry-auth
  namespace: ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry-auth
  template:
    metadata:
      labels:
        app: registry-auth
    spec:
      containers:
      - name: registry-auth
        image: withinboredom/passwords:7dab423649cdfeaf46cb4068e408713b55109610
        ports:
        - name: http
          containerPort: 80
        volumeMounts:
        - name: registry-auth-store
          mountPath: /auth.json
      volumes:
      - name: registry-auth-store
        hostPath:
          path: /mnt/registry-data/auth.json
          type: File
---
kind: Service
apiVersion: v1
metadata:
  name: registry-auth
  namespace: ingress
  labels:
    app: registry-auth
spec:
  selector:
    app: registry-auth
  ports:
  - name: http
    port: 80
    targetPort: 80
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: gc
  namespace: docker-registry
spec:
  schedule: 5 4 * * 1
  jobTemplate:
    metadata:
      labels:
        app: gc
    spec:
      containers:
      - name: docker-registry
        image: registry:2.7.1
        volumeMounts:
        - name: image-store2
          mountPath: /var/lib/registry
        imagePullPolicy: IfNotPresent
        command:
        - bin/registry
        - garbage-collect
        - --delete-untagged=true
        - /etc/docker/registry/config.yml
        restartPolicy: OnFailure
      volumes:
      - name: image-store2
        hostPath:
          path: /mnt/registry-data/data
          type: DirectoryOrCreate
